name: Custom Code Review

on:
  pull_request:
    types:
      - labeled
      - opened
      - synchronize
jobs:
  check_label:
    runs-on: ubuntu-latest
    outputs:
      label_added: ${{ steps.check.outputs.label_added }}
    steps:
      - name: Check Label
        id: check
        run: echo "::set-output name=label_added::${{ contains(github.event.pull_request.labels.*.name, 'Auto Code Review') }}"

  code_review:
    if: ${{ needs.check_label.outputs.label_added == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Latest Commit SHA
        if: steps.check_label.outputs.label_added == 'true'
        id: get_commit_sha
        run: |
          commit_sha=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/commits" | jq -r '.[0].sha')

          echo "::set-output name=commit_sha::$commit_sha"

      - name: Set Commit SHA
        if: steps.check_label.outputs.label_added == 'true'
        run: echo "COMMIT_SHA=${{ steps.get_commit_sha.outputs.commit_sha }}" >> $GITHUB_ENV
      - name: Run IfsCodeReview.jar
        run: |
          added_files=$(git diff --name-only ${{ github.event.after }}^ ${{ github.event.after }})
          for file in $added_files; do
            extension="${file##*.}"
            if [ "$extension" == "plsql" ]; then
              echo "Processing $file"
              COMMIT_SHA="${{ github.event.after }}"
              OWNER_ID="${{ github.repository_owner }}"
              REPO_ID=$(echo ${{ github.repository }} | awk -F/ '{print $NF}')
              PR_NO="${{ github.event.number }}"
              env GH_TOKEN="${{ secrets.GH_TOKEN }}" OWNER_ID="$OWNER_ID" REPO_ID="$REPO_ID" PR_NO="$PR_NO" java -jar .github/IfsCodeReview.jar "$COMMIT_SHA" "$file" "$OWNER_ID" "$REPO_ID" "$PR_NO"
            fi
          done
        working-directory: ${{ github.workspace }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          OWNER_ID: ${{ github.repository_owner }}
          REPO_ID: ${{ github.repository }}
          PR_NO: ${{ github.event.number }}
          COMMIT_SHA: ${{ github.event.after }}
